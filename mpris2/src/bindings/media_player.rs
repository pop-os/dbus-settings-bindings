// SPDX-License-Identifier: MPL-2.0
//! # DBus interface proxies for: `org.mpris.MediaPlayer2`
//!
//! This code was generated by `zbus-xmlgen` `2.0.1` from DBus introspection data.
//! Source: `Interface '/org/mpris/MediaPlayer2' from service 'org.mpris.MediaPlayer2.firefox.instance103520' on session bus`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the
//! [Writing a client proxy](https://dbus.pages.freedesktop.org/zbus/client.html)
//! section of the zbus documentation.
//!
//! This DBus object implements
//! [standard DBus interfaces](https://dbus.freedesktop.org/doc/dbus-specification.html),
//! (`org.freedesktop.DBus.*`) for which the following zbus proxies can be used:
//!
//! * [`zbus::fdo::PropertiesProxy`]
//! * [`zbus::fdo::IntrospectableProxy`]
//! * [`zbus::fdo::PeerProxy`]
//!
//! â€¦consequently `zbus-xmlgen` did not generate code for the above interfaces.

use zbus::proxy;

#[proxy(
	interface = "org.mpris.MediaPlayer2",
	default_path = "/org/mpris/MediaPlayer2"
)]
trait MediaPlayer2 {
	/// Quit method
	fn quit(&self) -> zbus::Result<()>;

	/// Raise method
	fn raise(&self) -> zbus::Result<()>;

	/// CanQuit property
	#[zbus(property)]
	fn can_quit(&self) -> zbus::Result<bool>;

	/// CanRaise property
	#[zbus(property)]
	fn can_raise(&self) -> zbus::Result<bool>;

	/// DesktopEntry property
	#[zbus(property)]
	fn desktop_entry(&self) -> zbus::Result<String>;

	/// HasTrackList property
	#[zbus(property)]
	fn has_track_list(&self) -> zbus::Result<bool>;

	/// Identity property
	#[zbus(property)]
	fn identity(&self) -> zbus::Result<String>;

	/// SupportedMimeTypes property
	#[zbus(property)]
	fn supported_mime_types(&self) -> zbus::Result<Vec<String>>;

	/// SupportedUriSchemes property
	#[zbus(property)]
	fn supported_uri_schemes(&self) -> zbus::Result<Vec<String>>;
}
